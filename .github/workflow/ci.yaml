name: EntryTracker CI

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
   
      - name: Read and bump version
        id: bump_version
        run: |
           VERSION=$(cat VERSION)
           IFS='.' read -r MAJOR MINOR PATCH <<< "$VERSION"
           PATCH=$((PATCH + 1))
           NEW_VERSION="$MAJOR.$MINOR.$PATCH"
           echo $NEW_VERSION > VERSION
           echo "VERSION=$NEW_VERSION" >> $GITHUB_ENV
           echo "VERSION=$NEW_VERSION" >> $GITHUB_OUTPUT


      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.10'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Start services with Docker Compose (Unit test DB optional)
        run: |
          docker compose up -d
          sleep 10

      - name: Run unit test (curl)
        run: |
          curl -f http://localhost:5000

      - name: Stop services after unit test
        run: docker compose down

      - name: Build Docker image
        run: docker build -t entrytracker:latest .

      - name: Run E2E test environment (Docker Compose)
        run: |
          docker compose down || true
          docker compose up -d
          sleep 10

      - name: Run E2E test (curl)
        run: |
          curl -f http://localhost:5000

      - name: Stop services after E2E
        run: docker compose down

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Tag Docker image for ECR
        id: tag-image
        run: |
          IMAGE_BASE="${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com/${{ secrets.ECR_REPOSITORY }}"
          docker tag entrytracker:latest $IMAGE_BASE:latest
          docker tag entrytracker:latest $IMAGE_BASE:${{ env.VERSION }}
          echo "IMAGE_URI=$IMAGE_BASE:${{ env.VERSION }}" >> $GITHUB_OUTPUT

      - name: Push image to ECR
        run: |
          IMAGE_BASE="${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com/${{ secrets.ECR_REPOSITORY }}"
          docker push $IMAGE_BASE:latest
          docker push $IMAGE_BASE:${{ env.VERSION }}


      - name: Deploy to EC2 via SSH
  uses: appleboy/ssh-action@v1.0.3
  with:
    host: ${{ secrets.EC2_HOST }}
    username: ubuntu
    key: ${{ secrets.EC2_SSH_KEY }}
    script: |
      cd /home/ubuntu
      echo "APP_VERSION=${{ steps.bump_version.outputs.VERSION }}" > .env
      docker compose stop
      docker compose rm -f
      docker rmi ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com/${{ secrets.ECR_REPOSITORY }}:${{ steps.bump_version.outputs.VERSION }} || true
      docker compose pull
      docker compose up -d

